#!/usr/bin/env sh
# vim: set ft=sh:
# Collect DBUS_SESSION_BUS_ADDRESS from running process

detect_player() {
  # if mpd/mopidy is running - use it unequivocally
  if pidof mpd > /dev/null; then
    printf "mpd\n";
    return;
  elif pgrep mopidy > /dev/null; then
    printf "mpd\n";
    return;
  fi

  if pidof spotify > /dev/null; then
    spotify_is_running=1;
  else
    spotify_is_running=0;
  fi;

  if pidof mocp > /dev/null; then
    mocp_is_running=1;
  else
    mocp_is_running=0;
  fi;

  if [ $spotify_is_running -eq 1 -a $mocp_is_running -eq 1 ]; then
    # both mocp and spotify are running. Check if spotify is playing
    # and if it is playing, use it. Else use mocp.
    spotify_status=$(dbus-send --print-reply \
                   --dest=org.mpris.MediaPlayer2.spotify \
                   /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get \
                   string:"org.mpris.MediaPlayer2.Player" \
                   string:"PlaybackStatus" \
            | grep variant \
            | awk -F\" '{print $(NF-1)}')
    mocp_status=$(mocp -Q %state 2>/dev/null)
    if [ "$spotify_status" == "Playing" -a "$mocp_status" != "PLAY" ]; then
      # spotify is playing; use it
      echo "spotify";
      return;
    elif [ "$mocp_status" == "PLAY" -a "$spotify_status" != "Playing" ]; then
      # mocp is playing; use it
      echo "mocp";
      return;
    elif [ "$mocp_status" != "PLAY" -a "$spotify_status" != "Playing" ]; then
      # neither is playing; use spotify
      echo "spotify"
      return;
    elif [ "$mocp_status" == "PLAY" -a "$spotify_status" == "Playing" ]; then
      # both are playing; BAIL
      echo "Detected that both are playing; Don't know what to do; baining"
      exit 1
    else
      # If neither is playing, pick spotify
      echo "spotify"
      return

    fi
  elif [ $spotify_is_running -eq 1 ]; then
    echo "spotify";
    return;
  elif [ $mocp_is_running -eq 1 ]; then
    echo "mocp";
    return;
  elif pidof mpv > /dev/null; then
    echo "mpv"
    return;
  fi
}

play() {
    case $player in
        "spotify")
            spotify_cmd Play;
            ;;
        "mocp")
            mocp --play;
            ;;
        "mpv")
            echo "pause" > ~/.ztream_fifo
            ;;
        "mpd")
            mpc play >/dev/null
            ;;
        *)
            echo $player
            ;;
    esac
}

stop() {
    case $player in
        "spotify")
            spotify_cmd Stop;
            ;;
        "mocp")
            mocp --stop;
            ;;
        "mpv")
            echo "stop" > ~/.ztream_fifo
            ;;
        "mpd")
            mpc stop >/dev/null
            ;;
        *)
            echo $player;
            ;;
    esac
}

toggle() {
    case $player in
        "spotify")
            spotify_cmd PlayPause;
            ;;
        "mocp")
            mocp --toggle-pause;
            ;;
        "mpv")
            echo "pause" > ~/.ztream_fifo
            ;;
        "mpd")
            mpc toggle >/dev/null
            ;;
        *)
            echo $player;
            ;;
    esac
}

next() {
    case $player in
        "spotify")
            spotify_cmd Next;
            ;;
        "mocp")
            mocp --next;
            ;;
        "mpv")
            echo "playlist_next" > ~/.ztream_fifo
            ;;
        "mpd")
            mpc next >/dev/null
            ;;
        *)
            echo $player;
            ;;
    esac
}

prev() {
    case $player in
        "spotify")
            spotify_cmd Previous;
            ;;
        "mocp")
            mocp --previous;
            ;;
        "mpv")
            echo "playlist_prev" > ~/.ztream_fifo
            ;;
        "mpd")
            mpc prev >/dev/null
            ;;
        *)
            echo $player;
            ;;
    esac
}

pause() {
    case $player in
        "spotify")
            spotify_cmd Pause;
            ;;
        "mocp")
            mocp --pause;
            ;;
        "mpv")
            echo "pause" > ~/.ztream_fifo
            ;;
        "mpd")
            mpc pause >/dev/null
            ;;
        *)
            echo $player;
            ;;
    esac
}

usage() {
    echo -e "USAGE: $0 [command]"
    echo -e "\t play, pause, toggle, stop, prev, next"
    exit 1
}

if [ "$#" -ne "1" ]; then
    usage;
fi;

command=$1;
player=$(detect_player)
echo $player
case $command in
    play)
        toggle;
        ;;
    pause)
        pause;
        ;;
    toggle)
        toggle;
        ;;
    stop)
        stop;
        ;;
    prev)
        prev;
        ;;
    next)
        next;
        ;;
    *)
        usage;
        ;;
esac
